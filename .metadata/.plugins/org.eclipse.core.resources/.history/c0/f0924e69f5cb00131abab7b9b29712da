package sfsu.csc780.jied.nutriy;

import java.util.HashMap;

import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.app.ActionBarDrawerToggle;
import android.support.v4.app.FragmentActivity;
import android.support.v4.widget.DrawerLayout;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class HomePageActivity extends FragmentActivity {
	
	public static final String TAG = "HomePageActivity";
	public  final String NUTRIY = getResources().getString(R.string.app_name);
	private String[] navigationTitles;
	private DrawerLayout drawerLayout;
	private ListView drawerList;
	private ActionBarDrawerToggle drawerToggle;
    private CharSequence title = "Home";
	
	public static final HashMap<String, Class> NAVIGATION_LIST;
	
	static {
		NAVIGATION_LIST = new HashMap<String, Class>();
		NAVIGATION_LIST.put("Home", HomePageActivity.class);
		NAVIGATION_LIST.put("Nutrition", NutritionPageActivity.class);
		// add more navigation items
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_home_page);
		setTitle(title);
		initNavigationDrawer();		
	}
	
	private void initFields() {
		
	}
	
	private void initNavigationDrawer() {
		initNavigationList();
		initNavigationListener();
	}
	
	private void initNavigationList() {
		navigationTitles = getResources().getStringArray(R.array.navigations_array);
		drawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
		drawerList = (ListView) findViewById(R.id.left_drawer);
		
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, 
		        R.layout.list_item, navigationTitles);
		
		// Set the adapter for the list view
        drawerList.setAdapter(adapter);
        // Set the list's click listener
        drawerList.setOnItemClickListener(new DrawerItemClickListener());
	}
	
	private class DrawerItemClickListener implements ListView.OnItemClickListener {

		@Override
		public void onItemClick(AdapterView<?> parent, View view, int position,
				long id) {
			view.setBackgroundColor(getResources().getColor(R.color.my_blue));
			selectItem(position);			
		}		
	}
	
	// Navigate to different activities 
	private void selectItem(int position) {		
		String navigation = drawerList.getItemAtPosition(position).toString();
		logNavigation(navigation);
		startActivity(new Intent(this, NAVIGATION_LIST.get(navigation)));
		// no need to change title here since the title is set when the activity is started
	}
	
	private void initNavigationListener() {
		// associate Navigation Drawer with ActionBar
        drawerToggle = new ActionBarDrawerToggle(this, drawerLayout,
                R.drawable.ic_drawer, R.string.drawer_open, R.string.drawer_close) {

            // Called when a drawer has settled in a completely closed state. 
            public void onDrawerClosed(View drawerView) {
                super.onDrawerClosed(drawerView);
                getActionBar().setTitle(title);
                invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
            }

            // Called when a drawer has settled in a completely open state. 
            public void onDrawerOpened(View drawerView) {
                super.onDrawerOpened(drawerView);
                getActionBar().setTitle(NUTRIY);
                invalidateOptionsMenu(); // creates call to onPrepareOptionsMenu()
                findCurrentNavigation().setBackgroundColor(getResources().getColor(R.color.my_blue));
            }
        };
        
     // Set the drawer toggle as the DrawerListener
        drawerLayout.setDrawerListener(drawerToggle);  
        
        getActionBar().setDisplayHomeAsUpEnabled(true);
        getActionBar().setHomeButtonEnabled(true);
	}
	
	private View findCurrentNavigation() {
		int position = 0;
		int count = drawerList.getChildCount();
		for (int i = 0; i < count; i++) {
			String navigation = drawerList.getItemAtPosition(i).toString();
			if (navigation.equals(title)) {
				position = i;
				break;
			}			
		}
		return drawerList.getChildAt(position);
	}
	
	@Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        // Sync the toggle state after onRestoreInstanceState has occurred.
        drawerToggle.syncState();
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        drawerToggle.onConfigurationChanged(newConfig);
    }
	
	public void onAddEntryClick(View v) {
		Intent addEntryIntent = new Intent(this, AddEntryActivity.class);
		startActivity(addEntryIntent);
	}
	
	@Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Pass the event to ActionBarDrawerToggle, if it returns
        // true, then it has handled the app icon touch event
        if (drawerToggle.onOptionsItemSelected(item)) {
          return true;
        }
        // Handle your other action bar items...

        return super.onOptionsItemSelected(item);
    }
	
	
	
	/** Called whenever we call invalidateOptionsMenu() 
    @Override
    public boolean onPrepareOptionsMenu(Menu menu) {
        // If the nav drawer is open, hide action items related to the content view
        boolean drawerOpen = drawerLayout.isDrawerOpen(drawerList);
        menu.findItem(R.id.action_websearch).setVisible(!drawerOpen);
        return super.onPrepareOptionsMenu(menu);
    } */

	private void logNavigation(String navigation) {
		Log.d(TAG, "Navigate to " + navigation);
	}
	
	@Override
	public void setTitle(CharSequence title) {
	    this.title = title.toString();
	    getActionBar().setTitle(this.title);
	}

	//@Override
	//public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		//getMenuInflater().inflate(R.menu.home_page, menu);
		//return true;
	//}

}

